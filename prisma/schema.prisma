// Prisma schema for MakanManager
// Generated based on available models

 datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 }

 generator client {
  provider = "prisma-client-js"
 }

 model Staff {
  id          String      @id @default(uuid())
  name        String
  roles       String      // comma separated roles
  gender      String?
  phone       String
  email       String
  startDate   DateTime?
  dateOfBirth DateTime?
  address     String?
  points      Int         @default(0)
  status      String?     @default("active")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  tasks       Task[]      @relation("StaffTasks", references: [id])
  documents   Document[]
  skills      UserSkill[]
 }

 model Document {
  id        String   @id @default(uuid())
  staff     Staff    @relation(fields: [staffId], references: [id])
  staffId   String
  fileName  String
  url       String
  createdAt DateTime @default(now())
 }

 model Skill {
  id    String      @id @default(uuid())
  name  String      @unique
  users UserSkill[]
 }

 model UserSkill {
  id            String   @id @default(uuid())
  staff         Staff    @relation(fields: [staffId], references: [id])
  staffId       String
  skill         Skill    @relation(fields: [skillId], references: [id])
  skillId       String
  verified      Boolean  @default(false)
  pointsAwarded Boolean  @default(false)
  createdAt     DateTime @default(now())
 }

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      String   @default("open")
  dueDate     DateTime?
  basePoints  Int?    @default(0)
  assignerId  String?
  assigneeId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assigner    Staff?   @relation("StaffTasks", fields: [assignerId], references: [id])
  assignee    Staff?   @relation("StaffTasks", fields: [assigneeId], references: [id])
}


model Recipe {
  id            String   @id @default(uuid())
  name          String
  category      String
  cuisine       String
  station       String
  yield         String
  prepTime      Int
  tags          String[]
  photo         String
  ingredients   Json
  steps         String[]
  allergens     String[]
  notes         String?
  createdBy     String
  updatedBy     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

}
